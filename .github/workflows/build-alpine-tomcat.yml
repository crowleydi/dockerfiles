name: Build alpine-tomcat Docker image
env:
  REGISTRY: docker.io
  IMAGE_NAME: kanstin/alpine-tomcat

on:
  workflow_dispatch:
    inputs:
      do_publish:
        description: "Publish image after build?"
        required: true
        type: boolean
        default: false
      tomcat_version:
        description: "The version of Tomcat to include in the image."
        required: true
        type: string
        default: "9.0.107"

  workflow_call:
    inputs:
      tomcat_version:
        description: "The version of Tomcat to include in the image."
        required: true
        type: string

jobs:
  build-push-amd64:
    runs-on: ubuntu-24.04
    env:
      needToPush: ${{ github.ref == 'refs/heads/main' }}
    permissions:
      contents: read
      id-token: write
      attestations: write
      packages: write
    outputs:
      digest: ${{ steps.build-push-amd64.outputs.digest }}

    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up tags
        id: tags
        run: |
          echo "LATEST_TAG=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest" >> $GITHUB_OUTPUT
          echo "VERSION_TAG=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ inputs.tomcat_version }}" >> $GITHUB_OUTPUT

      - name: Build and push
        id: build-push-amd64
        uses: docker/build-push-action@v6
        with:
          context: "{{defaultContext}}:alpine-tomcat"
          push: ${{ env.needToPush }}
          build-args: |
            TOMCAT_VERSION=${{ inputs.tomcat_version }}
          tags: |
            ${{ steps.tags.outputs.LATEST_TAG }}-amd64
            ${{ steps.tags.outputs.VERSION_TAG }}-amd64
          provenance: mode=max
          sbom: true

      - name: Attest AMD64 image
        if: ${{ env.needToPush == 'true' }}
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.build-push-amd64.outputs.digest }}
          push-to-registry: true

  build-push-arm64:
    runs-on: ubuntu-24.04-arm
    env:
      needToPush: ${{ github.ref == 'refs/heads/main' }}
    permissions:
      contents: read
      id-token: write
      attestations: write
      packages: write
    outputs:
      digest: ${{ steps.build-push-arm64.outputs.digest }}
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up tags
        id: tags
        run: |
          echo "LATEST_TAG=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest" >> $GITHUB_OUTPUT
          echo "VERSION_TAG=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ inputs.tomcat_version }}" >> $GITHUB_OUTPUT

      - name: Build and push
        id: build-push-arm64
        uses: docker/build-push-action@v6
        with:
          context: "{{defaultContext}}:alpine-tomcat"
          push: ${{ env.needToPush }}
          build-args: |
            TOMCAT_VERSION=${{ inputs.tomcat_version }}
          tags: |
            ${{ steps.tags.outputs.LATEST_TAG }}-arm64
            ${{ steps.tags.outputs.VERSION_TAG }}-arm64
          provenance: mode=max
          sbom: true

      - name: Attest ARM64 image
        if: ${{ env.needToPush == 'true' }}
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.build-push-arm64.outputs.digest }}
          push-to-registry: true

  create-push-manifests:
    if: ${{ github.event_name == 'workflow_dispatch' && inputs.do_publish || github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-24.04
    needs: [build-push-arm64, build-push-amd64]
    permissions:
      contents: read
      id-token: write
      attestations: write
      packages: write
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: build and push multi-arch manifest
        uses: int128/docker-manifest-create-action@v2
        id: multi-arch
        with:
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ inputs.tomcat_version }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:9.0
          sources: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-arm64
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-amd64


      - name: Attest multi-arch manifest
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.multi-arch.outputs.digest }}
          push-to-registry: true
